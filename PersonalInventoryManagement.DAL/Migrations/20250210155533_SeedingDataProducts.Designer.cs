// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalInventoryManagement.DAL.DataBase;

#nullable disable

namespace PersonalInventoryManagement.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250210155533_SeedingDataProducts")]
    partial class SeedingDataProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonalInventoryManagement.DAL.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PersonalInventoryManagement.DAL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            CategoryId = 100,
                            ExpireDate = new DateTime(2028, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageURL = "Images/Products/1.jpg",
                            Name = "Laptop",
                            Price = 1500.99m,
                            Quantity = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 101,
                            CategoryId = 100,
                            ExpireDate = new DateTime(2027, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageURL = "Images/Products/2.jpg",
                            Name = "Smartphone",
                            Price = 799.99m,
                            Quantity = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 102,
                            CategoryId = 101,
                            ExpireDate = new DateTime(2026, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageURL = "Images/Products/3.jpg",
                            Name = "T-Shirt",
                            Price = 19.99m,
                            Quantity = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 103,
                            CategoryId = 101,
                            ExpireDate = new DateTime(2026, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageURL = "Images/Products/4.jpg",
                            Name = "Jeans",
                            Price = 39.99m,
                            Quantity = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 104,
                            CategoryId = 102,
                            ExpireDate = new DateTime(2030, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageURL = "Images/Products/5.jpg",
                            Name = "Washing Machine",
                            Price = 499.99m,
                            Quantity = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 105,
                            CategoryId = 102,
                            ExpireDate = new DateTime(2032, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageURL = "Images/Products/6.jpg",
                            Name = "Refrigerator",
                            Price = 899.99m,
                            Quantity = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 106,
                            CategoryId = 103,
                            ExpireDate = new DateTime(2035, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageURL = "Images/Products/7.jpg",
                            Name = "Fiction Novel",
                            Price = 12.99m,
                            Quantity = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 107,
                            CategoryId = 104,
                            ExpireDate = new DateTime(2028, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageURL = "Images/Products/8.jpg",
                            Name = "Children's Toy Car",
                            Price = 25.99m,
                            Quantity = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 108,
                            CategoryId = 105,
                            ExpireDate = new DateTime(2029, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageURL = "Images/Products/9.jpg",
                            Name = "Basketball",
                            Price = 29.99m,
                            Quantity = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 109,
                            CategoryId = 106,
                            ExpireDate = new DateTime(2033, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageURL = "Images/Products/10.jpg",
                            Name = "Dumbbells Set",
                            Price = 99.99m,
                            Quantity = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("PersonalInventoryManagement.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PersonalInventoryManagement.DAL.Entities.Product", b =>
                {
                    b.HasOne("PersonalInventoryManagement.DAL.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalInventoryManagement.DAL.Entities.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersonalInventoryManagement.DAL.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PersonalInventoryManagement.DAL.Entities.User", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
